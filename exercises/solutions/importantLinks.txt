#Solutions to Exercise 2: LEDs
Notes on Exe 4:
PWM = Pulse Width Modulation....for changing the intensity of light (follwoing a sine wave function)
It defines a function intensityCycle, which increases the PWM duty cycle in steps given by the resolution parameter and keeps this intensity stable for a duration given by the duration parameter. It does so for duty cycle 0 up to duty cycle 1 and then back to duty cycle 0.

A demo program cycling the intensity not in a linear but a sinusoidal fashion. Both programs are given here:

pwmExerciseSol.py: the linear cycle and
pwmLED.py: the sinusoidal cycle


_____________________________________________________________________________________
-------------------------------------------------------------------------------------
#Solutions to Exercise 3: Switches

The MicroPython documentation includes a chapter on writing interrupt service routines http://docs.micropython.org/en/latest/reference/isr_rules.html

How to do this with GPIO lines is described in http://docs.micropython.org/en/latest/esp8266/tutorial/pins.html
When using interrupts you may run into problems with bouncing of mechanical switches. The transition is not a single clear cut step function but may flip back and forth. Have a look at http://docs.micropython.org/en/latest/pyboard/tutorial/debounce.html for an explanation on how to eliminate this problem (software debounce algorithm).

_____________________________________________________________________________________
-------------------------------------------------------------------------------------
